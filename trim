#!/usr/bin/perl

use strict;
use warnings;

use CommandLine::Files;

my $VERSION = "1.00";

my $usage = "
\tUsage:
\t    trim [ -r ] [ -i ] [ -tl -tr ] myfile.txt [ files... ]
\tOr:
\t    someotherprogram | trim [ -tl -tr ]

\tTakes myfile.txt or stdin and prints it to stdout trimming the leading and trailing whitespace.

\t -tr will make trim strip only trailing whitespace (whitespaces on the right).
\t -tl will make trim strip only leading whitespace (whitespace on the left).

\t -r to recursively process text files found in directories.

\t -i to edit the files in place.  Rather than printing the contents of the files to stdout, the files will be modified and saved on disk with lines trimmed.
\t    Use this option with care.

\t -v or --version prints the version number.

";

my %args = map { $_ => 1} @ARGV;
print "Version $VERSION\n" and exit( 0 ) if exists $args{ "-v" } or exists $args{ "--version" };

my @files = getfiles( $usage );
%args = map { $_ => 1} @ARGV;

print "Input was STDIN but -i was specified.  Cannot edit files in place on disk when input is STDIN.\n" and exit(1) if exists $args{"-i"} and $CommandLine::Files::InputWasSTDIN;

foreach my $file ( @files ) {
    my @lines = ( );

    open( FILE, $file ) or die "Failed to open file $file.  Error: $!";
    push( @lines, $_ ) while( <FILE> );
    close( FILE );

    # Trimming white space.
    if( exists( $args{"-tl"} ) ) {
        s/^[^\S\n]*// foreach @lines;
    } elsif( exists( $args{"-tr"} ) ) {
        s/[^\S\n]*$// foreach @lines;
    } else {
        s/^[^\S\n]*// foreach @lines;
        s/[^\S\n]*$// foreach @lines;
    }

    if( exists( $args{"-i"} ) ) {
        open( FILE, "> $file" ) or die "Failed to open file $file.  Error: $!";
        print FILE @lines;
        close( FILE );
    } else {
        print @lines;
    }
}

